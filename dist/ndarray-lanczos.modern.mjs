import t from"ndarray";const e=(t,e)=>{if(t<=-e||t>=e)return 0;if(t>-1.1920929e-7&&t<1.1920929e-7)return 1;const r=t*Math.PI;return Math.sin(r)/r*Math.sin(r/e)/(r/e)},r=(t,r,a,n,o,s,h,l)=>{const c=2**l-1,p=t=>Math.round(t*c),f=o?2:3,i=1/a,u=Math.min(1,a),d=f/u,y=new h((Math.floor(2*(d+1))+2)*r);let A=0;for(let a=0;a<r;a++){const o=(a+.5)*i+n,l=Math.max(0,Math.floor(o-d)),c=Math.min(t-1,Math.ceil(o+d)),_=c-l+1,E=new s(_),M=new h(_);let L=0,N=0;for(let t=l;t<=c;t++){const r=e((t+.5-o)*u,f);L+=r,E[N]=r,N++}let S=0;for(let t=0;t<E.length;t++){const e=E[t]/L;S+=e,M[t]=p(e)}M[r>>1]+=p(1-S);let w=0;for(;w<M.length&&0===M[w];)w++;let m=M.length-1;for(;m>0&&0===M[m];)m--;const C=m-w+1;y[A++]=l+w,y[A++]=C,y.set(M.subarray(w,m+1),A),A+=C}return y},a=(t,e,r,a)=>{const[n,o]=t.shape,[s]=e.shape,h=2**(8*e.data.BYTES_PER_ELEMENT)-1,l=2**(a-1),c=2*l,p=Array(t.shape[2]);for(let a=0;a<o;a++){const n=a;let o=0;for(let i=0;i<s;i++){let s=r[o++];for(let e=0;e<t.shape[2];e++)p[e]=0;for(let e=r[o++];e>0;e--){const e=r[o++];for(let r=0;r<t.shape[2];r++)p[r]=p[r]+e*t.get(s,a,r);s++}for(let r=0;r<t.shape[2];r++)e.set(i,n,r,(f=(p[r]+l)/c)<0?0:f>h?h:f)}}var f};var n;function o(e,o,s){if(3!==e.shape.length||3!==o.shape.length)throw new TypeError("Input and output must have exactly 3 dimensions (width, height and colorspace)");const[h,l]=e.shape,[c,p]=o.shape,f=c/h,i=p/l;let u,d;switch(o.dtype){case"uint8_clamped":case"uint8":u=Float32Array,d=Int16Array;break;case"uint16":case"uint32":u=Float64Array,d=Int32Array;break;default:throw TypeError(`Unsupported data type ${o.dtype}`)}const y=7*d.BYTES_PER_ELEMENT,A=r(h,c,f,0,s===n.LANCZOS_2,u,d,y),_=r(l,p,i,0,s===n.LANCZOS_2,u,d,y),E=t(new(0,o.data.constructor)(c*l*4),[l,c,4]),M=E.transpose(1,0),L=o.transpose(1,0);a(e,M,A,y),a(E,L,_,y)}function s(t,e){o(t,e,n.LANCZOS_3)}function h(t,e){o(t,e,n.LANCZOS_2)}!function(t){t[t.LANCZOS_3=3]="LANCZOS_3",t[t.LANCZOS_2=2]="LANCZOS_2"}(n||(n={}));export{h as lanczos2,s as lanczos3};
//# sourceMappingURL=ndarray-lanczos.modern.mjs.map
